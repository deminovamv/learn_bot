"""
–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ1
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫: ephem
* –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–¥—É–ª—å ephem
* –î–æ–±–∞–≤—å—Ç–µ –≤ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥—É /planet, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∞ –≤—Ö–æ–¥
  –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä /planet Mars
* –í —Ñ—É–Ω–∫—Ü–∏–∏-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ update.message.text –ø–æ–ª—É—á–∏—Ç–µ
  –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç—ã (–ø–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ .split())
* –ü—Ä–∏ –ø–æ–º–æ—â–∏ —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ if –∏ ephem.constellation –Ω–∞—É—á–∏—Ç–µ
  –±–æ—Ç–∞ –æ—Ç–≤–µ—á–∞—Ç—å, –≤ –∫–∞–∫–æ–º —Å–æ–∑–≤–µ–∑–¥–∏–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–ª–∞–Ω–µ—Ç–∞.
"""


import logging
from telegram import update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import settings
import ephem
from datetime import date


logging.basicConfig(filename="bot.log", level= logging.INFO)

PROXY = {'proxy_url': settings.PROXY_URL,
    'urllib3_proxy_kwargs': {
        'username': settings.PROXY_USERNAME,
        'password': settings.PROXY_PASSWORD
    }
}


Planet ={
  "Mars":"–ú–∞—Ä—Å",
  "Mercury":"–ú–µ—Ä–∫—É—Ä–∏–π",
  "Venus":"–í–µ–Ω–µ—Ä–∞",
  "Jupiter":"–Æ–ø–∏—Ç–µ—Ä",
  "Saturn":"–°–∞—Ç—É—Ä–Ω",
  "Uranus":"–£—Ä–∞–Ω",
  "Neptune":"–ù–µ–ø—Ç—É–Ω",
  "Pluto":"–ü–ª—É—Ç–æ–Ω",
  "Sun":"–°–æ–ª–Ω—Ü–µ",
  "Moon":"–õ—É–Ω–∞"
}

def get_key(d, value):
    for k, v in d.items():
        if v == value:
            return (k)

def name_planet(update, context):
    print(f'/planet')
    text = update.message.text.split()
    if len(text) == 1:
        update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ \'/planet Mars\'')
    else:
        try:
             planet_name = text[1].capitalize()
             key_planet = get_key(Planet,planet_name)
             if key_planet:
                 planet_name = key_planet
             m = getattr(ephem, planet_name)(date.today())
             update.message.reply_text(f'Planet: {planet_name}')
             constellation = ephem.constellation(m)
             update.message.reply_text(f'Date: {date.today()}')
             update.message.reply_text(f'Constellation: {constellation[1]}')
        except(AttributeError,TypeError):
            update.message.reply_text('–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–µ—Ç—ã, –ø–æ–∂–∞–ª—É—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')



def greet_user(update, context):
    print(f'/start')
    name = update.message.chat.first_name
    update.message.reply_text(f'–ü—Ä–∏–≤–µ—Ç, {name} üòä! ')
    
def talk_to_me(update, context):
    text= update.message.text
    print(text)
    update.message.reply_text(text)

def main():
    mybot= Updater(settings.API_KEY, use_context= True, request_kwargs= PROXY)

    dp =  mybot.dispatcher
    dp.add_handler(CommandHandler("start", greet_user))    
    dp.add_handler(CommandHandler("planet", name_planet))
    dp.add_handler(MessageHandler(Filters.text, talk_to_me))

    logging.info('START')
    mybot.start_polling()
    mybot.idle()

if __name__ == '__main__':
    main()